contract MemeVote =

  record meme  =
    { creatorAddress : address,
        url            : string,
      name           : string,
      voteCount      : int,
      tags           : map (int, tag)}
      
  record tag = { 
    words : string }
      
  record state = {
    memes       : map(int, meme),
    memesLength : int}
    
  function init() = {
    memes = {},
    memesLength = 0}
  
  public function getMeme(index: int) : meme =
    switch(Map.lookup(index, state.memes))
      None    => abort("No meme was found.")
      Some(x) =>  x

  public stateful function registerMeme(url' : string, name' : string ) =
    let meme = { creatorAddress = Call.caller, url = url', name = name', voteCount = 0, tags={}}
    let index = getMemesLength() + 1
    put(state {memes[index] = meme, memesLength = index})
    
  public function getMemesLength() : int =
    state.memesLength
    
  public stateful function voteMeme(index: int) =
    let meme = getMeme(index)
    Chain.spend(meme.creatorAddress, Call.value)
    let updatedVoteCount = meme.voteCount + Call.value
    let updatedMemes = state.memes{ [index].voteCount = updatedVoteCount }
    put(state {memes = updatedMemes})
